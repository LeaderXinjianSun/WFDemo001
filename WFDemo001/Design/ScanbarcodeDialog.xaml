<Window
    x:Class="WFDemo001.Design.ScanbarcodeDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:WFDemo001.Design.Converts"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:halconviewer="clr-namespace:HalconViewer;assembly=HalconViewer"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:WFDemo001.Design"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="ScanbarcodeDialog"
    Width="800"
    Height="600"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding ClosedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <local:ScanbarcodeDialogViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="HomeOperateButton" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="60" />
                <Setter Property="Height" Value="60" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="FontSize" Value="24" />
            </Style>
            <Style x:Key="ParamTextBlockBase" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style
                x:Key="ParamNameTextBlockStyle"
                BasedOn="{StaticResource ParamTextBlockBase}"
                TargetType="{x:Type TextBlock}">
                <Setter Property="Width" Value="50" />
            </Style>
            <Style
                x:Key="ParamUnitTextBlockStyle"
                BasedOn="{StaticResource ParamTextBlockBase}"
                TargetType="{x:Type TextBlock}">
                <Setter Property="Width" Value="30" />
            </Style>
            <Style x:Key="ParamTextBoxBase" TargetType="{x:Type TextBox}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>
            <Style
                x:Key="ParamTextBoxStyle"
                BasedOn="{StaticResource ParamTextBoxBase}"
                TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="60" />
            </Style>
            <converter:BooleanReversalConverter x:Key="BooleanReversalConverter" />
            <converter:BooleanAndConverter x:Key="BooleanAndConverter" />
        </ResourceDictionary>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <GroupBox Header="相机">
            <halconviewer:ImageViewer
                x:Name="CameraImageViewer"
                AppendHMessage="{Binding CameraAppendHMessage0}"
                AppendHObject="{Binding CameraAppendHObject0}"
                AutoRepaint="True"
                GCStyle="{Binding CameraGCStyle0}"
                Image="{Binding CameraImage0}"
                ROIList="{Binding CameraROIList0}"
                Repaint="{Binding CameraRepaint0}" />
        </GroupBox>
        <Grid Grid.Column="1">
            <StackPanel>
                <GroupBox Header="操作">
                    <WrapPanel>
                        <Button
                            Command="{Binding OpenImageCommand}"
                            Content="打开"
                            IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanReversalConverter}}"
                            Style="{StaticResource HomeOperateButton}" />
                        <Button
                            Command="{Binding GrabImageCommand}"
                            Content="拍照"
                            IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanReversalConverter}}"
                            Style="{StaticResource HomeOperateButton}" />
                        <Button
                            Command="{Binding CreateRec1RegionCommand}"
                            Content="区域"
                            Style="{StaticResource HomeOperateButton}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                    <Binding Converter="{StaticResource BooleanReversalConverter}" Path="IsBusy" />
                                    <Binding Converter="{StaticResource BooleanReversalConverter}" Path="IsDrawing" />
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                        <Button
                            Command="{Binding ScanBarcodeCommand}"
                            Content="扫码"
                            IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanReversalConverter}}"
                            Style="{StaticResource HomeOperateButton}" />
                    </WrapPanel>
                </GroupBox>

                <GroupBox Grid.Row="1" Header="参数">
                    <StackPanel>
                        <StackPanel Margin="0,1,0,0" Orientation="Horizontal">
                            <TextBlock
                                Width="70"
                                Style="{StaticResource ParamNameTextBlockStyle}"
                                Text="曝光时间" />
                            <TextBox
                                d:Text="2"
                                Style="{StaticResource ParamTextBoxStyle}"
                                Text="{Binding CameraExposureTime}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding TextBoxLostFocusCommand}" CommandParameter="CameraExposureTime" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <TextBlock
                                Width="40"
                                Style="{StaticResource ParamUnitTextBlockStyle}"
                                Text="μs" />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>

        </Grid>
    </Grid>
</Window>
